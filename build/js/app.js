"use strict";

;(function () {
    "use strict";

    angular.module('app', ["ui.bootstrap", 'ui.router', 'home']).config(["$urlRouterProvider", "$stateProvider", function ($urlRouterProvider, $stateProvider) {
        $urlRouterProvider.otherwise('/home');
    }]).run(function () {});
})();
'use strict';

;(function () {
  "use strict";

  angular.module('home', []);

  angular.module('home').config(["$stateProvider", function ($stateProvider) {
    $stateProvider.state('home', {
      url: '/home',
      controller: 'HomeCtrl',
      templateUrl: '../views/home.html',
      controllerAs: 'home',
      css: '../less/home.less'
    });
  }]);
})();
'use strict';

;(function () {
  "use strict";

  HomeCtrl.$inject = ["$http"];
  angular.module('home').controller('HomeCtrl', HomeCtrl);

  function HomeCtrl($http) {
    var vm = this;

    vm.customersWaiting = $http({
      method: "GET",
      url: "/guests"
    }).then(function (users) {
      vm.customersWaiting = users.data;
    });

    console.log('change');
    vm.tables = $http({
      method: "GET",
      url: "/tables/find-all-tables"
    }).then(function (tables) {
      vm.tables = tables.data;
    });
  }
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFwcC5tb2R1bGUuanMiLCJob21lL21vZHVsZS5qcyIsImhvbWUvaG9tZS5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkdXJsUm91dGVyUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIm90aGVyd2lzZSIsInJ1biIsInN0YXRlIiwidXJsIiwiY29udHJvbGxlciIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlckFzIiwiY3NzIiwiSG9tZUN0cmwiLCIkaHR0cCIsInZtIiwiY3VzdG9tZXJzV2FpdGluZyIsIm1ldGhvZCIsInRoZW4iLCJ1c2VycyIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwidGFibGVzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUNBQSxDQUFFLENBQUEsWUFBVztJQUNiOztJQUVBQSxRQUFRQyxPQUFPLE9BQU8sQ0FDbEIsZ0JBQ0EsYUFDQSxTQUVDQyxnREFBTyxVQUFVQyxvQkFBb0JDLGdCQUFnQjtRQUNsREQsbUJBQW1CRSxVQUFVO1FBRWhDQyxJQUFJLFlBQVk7O0FERnJCOztBRVRBLENBQUUsQ0FBQSxZQUFXO0VBQ2I7O0VBRUFOLFFBQVFDLE9BQU8sUUFBUTs7RUFFdkJELFFBQVFDLE9BQU8sUUFDWkMsMEJBQU8sVUFBU0UsZ0JBQWU7SUFDNUJBLGVBQ0dHLE1BQU0sUUFBUTtNQUNiQyxLQUFLO01BQ0xDLFlBQVk7TUFDWkMsYUFBYTtNQUNiQyxjQUFjO01BQ2RDLEtBQUs7Ozs7QUZhZjs7QUcxQkEsQ0FBRSxDQUFBLFlBQVc7RUFDYjs7O0VBRUFaLFFBQVFDLE9BQU8sUUFDWlEsV0FBVyxZQUFZSTs7RUFFeEIsU0FBU0EsU0FBU0MsT0FBTztJQUN2QixJQUFJQyxLQUFLOztJQUVUQSxHQUFHQyxtQkFBbUJGLE1BQU07TUFDMUJHLFFBQVE7TUFDUlQsS0FBSztPQUVKVSxLQUFNLFVBQUEsT0FBUztNQUNkSCxHQUFHQyxtQkFBbUJHLE1BQU1DOzs7SUFHaENDLFFBQVFDLElBQUk7SUFDWlAsR0FBR1EsU0FBU1QsTUFBTTtNQUNoQkcsUUFBUTtNQUNSVCxLQUFLO09BRUpVLEtBQU0sVUFBQSxRQUFVO01BQ2ZILEdBQUdRLFNBQVNBLE9BQU9IOzs7S0F2QjFCIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG47KGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXCJ1aS5ib290c3RyYXBcIiwgJ3VpLnJvdXRlcicsICdob21lJ10pLmNvbmZpZyhmdW5jdGlvbiAoJHVybFJvdXRlclByb3ZpZGVyLCAkc3RhdGVQcm92aWRlcikge1xuICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvaG9tZScpO1xuICAgIH0pLnJ1bihmdW5jdGlvbiAoKSB7fSk7XG59KSgpO1xuJ3VzZSBzdHJpY3QnO1xuXG47KGZ1bmN0aW9uICgpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2hvbWUnLCBbXSk7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2hvbWUnKS5jb25maWcoZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICB1cmw6ICcvaG9tZScsXG4gICAgICBjb250cm9sbGVyOiAnSG9tZUN0cmwnLFxuICAgICAgdGVtcGxhdGVVcmw6ICcuLi92aWV3cy9ob21lLmh0bWwnLFxuICAgICAgY29udHJvbGxlckFzOiAnaG9tZScsXG4gICAgICBjc3M6ICcuLi9sZXNzL2hvbWUubGVzcydcbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuJ3VzZSBzdHJpY3QnO1xuXG47KGZ1bmN0aW9uICgpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgYW5ndWxhci5tb2R1bGUoJ2hvbWUnKS5jb250cm9sbGVyKCdIb21lQ3RybCcsIEhvbWVDdHJsKTtcblxuICBmdW5jdGlvbiBIb21lQ3RybCgkaHR0cCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICB2bS5jdXN0b21lcnNXYWl0aW5nID0gJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgdXJsOiBcIi9ndWVzdHNcIlxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHVzZXJzKSB7XG4gICAgICB2bS5jdXN0b21lcnNXYWl0aW5nID0gdXNlcnMuZGF0YTtcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKCdjaGFuZ2UnKTtcbiAgICB2bS50YWJsZXMgPSAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL3RhYmxlcy9maW5kLWFsbC10YWJsZXNcIlxuICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRhYmxlcykge1xuICAgICAgdm0udGFibGVzID0gdGFibGVzLmRhdGE7XG4gICAgfSk7XG4gIH1cbn0pKCk7IiwiOyhmdW5jdGlvbigpIHtcblwidXNlIHN0cmljdFwiO1xuXG5hbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xyXG4gICAgXCJ1aS5ib290c3RyYXBcIixcclxuICAgICd1aS5yb3V0ZXInLFxyXG4gICAgJ2hvbWUnXHJcbl0pXHJcbiAgICAuY29uZmlnKGZ1bmN0aW9uICgkdXJsUm91dGVyUHJvdmlkZXIsICRzdGF0ZVByb3ZpZGVyKSB7XHJcbiAgICAgICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2hvbWUnKTtcclxuICAgIH0pXHJcbiAgICAucnVuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB9KTtcbn0oKSk7XG4iLCI7KGZ1bmN0aW9uKCkge1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmFuZ3VsYXIubW9kdWxlKCdob21lJywgW10pO1xyXG5cclxuYW5ndWxhci5tb2R1bGUoJ2hvbWUnKVxyXG4gIC5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIpe1xyXG4gICAgICAkc3RhdGVQcm92aWRlclxyXG4gICAgICAgIC5zdGF0ZSgnaG9tZScsIHtcclxuICAgICAgICAgIHVybDogJy9ob21lJyxcclxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ3RybCcsXHJcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4uL3ZpZXdzL2hvbWUuaHRtbCcsXHJcbiAgICAgICAgICBjb250cm9sbGVyQXM6ICdob21lJyxcclxuICAgICAgICAgIGNzczogJy4uL2xlc3MvaG9tZS5sZXNzJ1xyXG4gICAgICAgIH0pO1xyXG4gIH0pO1xufSgpKTtcbiIsIjsoZnVuY3Rpb24oKSB7XG5cInVzZSBzdHJpY3RcIjtcblxuYW5ndWxhci5tb2R1bGUoJ2hvbWUnKVxyXG4gIC5jb250cm9sbGVyKCdIb21lQ3RybCcsIEhvbWVDdHJsKTtcclxuXHJcbiAgZnVuY3Rpb24gSG9tZUN0cmwoJGh0dHApIHtcclxuICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgdm0uY3VzdG9tZXJzV2FpdGluZyA9ICRodHRwKHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICB1cmw6IFwiL2d1ZXN0c1wiXHJcbiAgICB9KVxyXG4gICAgICAudGhlbiggdXNlcnMgPT4ge1xyXG4gICAgICAgIHZtLmN1c3RvbWVyc1dhaXRpbmcgPSB1c2Vycy5kYXRhO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnY2hhbmdlJyk7XHJcbiAgICB2bS50YWJsZXMgPSAkaHR0cCh7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgdXJsOiBcIi90YWJsZXMvZmluZC1hbGwtdGFibGVzXCJcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKCB0YWJsZXMgPT4ge1xyXG4gICAgICAgIHZtLnRhYmxlcyA9IHRhYmxlcy5kYXRhO1xyXG4gICAgICB9KTtcclxuICB9XG59KCkpO1xuIl19
